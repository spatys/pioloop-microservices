#!/bin/bash

# Pioloop Microservices - Script d'arrÃªt
# Ce script arrÃªte tous les microservices

set -e  # ArrÃªter en cas d'erreur

echo "ðŸ›‘ ArrÃªt des microservices Pioloop..."
echo "====================================="

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction pour afficher les messages colorÃ©s
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# VÃ©rifier que les rÃ©pertoires existent
if [ ! -d "Email.Microservice" ]; then
    print_error "Le rÃ©pertoire Email.Microservice n'existe pas"
    exit 1
fi

if [ ! -d "Auth.Microservice" ]; then
    print_error "Le rÃ©pertoire Auth.Microservice n'existe pas"
    exit 1
fi

# ArrÃªter Auth Microservice
print_status "ArrÃªt du Auth Microservice..."
cd Auth.Microservice
docker-compose down
print_success "Auth Microservice arrÃªtÃ©"
cd ..

# ArrÃªter Email Microservice
print_status "ArrÃªt du Email Microservice..."
cd Email.Microservice
docker-compose down
print_success "Email Microservice arrÃªtÃ©"
cd ..

echo ""
print_success "Tous les microservices ont Ã©tÃ© arrÃªtÃ©s !"
echo ""
echo "ðŸ’¡ Pour supprimer aussi les volumes (donnÃ©es) :"
echo "  â€¢ Auth:    cd Auth.Microservice && docker-compose down -v"
echo "  â€¢ Email:   cd Email.Microservice && docker-compose down -v"
