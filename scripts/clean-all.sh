#!/usr/bin/env bash
set -euo pipefail

# Script pour arr√™ter et supprimer tous les containers, images et volumes Docker
# ATTENTION: Ce script supprime TOUT ce qui est li√© √† Docker

# Ce script vit dans pioloop-microservices/scripts
ROOT_DIR="$(cd "$(dirname "$0")/.." && pwd)"  # -> pioloop-microservices

# Fonction pour v√©rifier si Docker fonctionne
check_docker() {
  if ! docker info &> /dev/null; then
    echo "‚ùå Docker n'est pas en cours d'ex√©cution"
    echo "Veuillez d√©marrer Docker et r√©essayer"
    exit 1
  fi
}

# Fonction pour nettoyer tout le syst√®me Docker
clean_everything() {
  echo "==> Nettoyage complet du syst√®me Docker..."
  
  # Arr√™ter tous les containers en cours d'ex√©cution
  echo "  - Arr√™t de tous les containers..."
  docker stop $(docker ps -q) 2>/dev/null || true
  
  # Supprimer tous les containers
  echo "  - Suppression de tous les containers..."
  docker rm -f $(docker ps -aq) 2>/dev/null || true
  
  # Supprimer toutes les images
  echo "  - Suppression de toutes les images..."
  docker rmi -f $(docker images -q) 2>/dev/null || true
  
  # Supprimer tous les volumes
  echo "  - Suppression de tous les volumes..."
  docker volume rm $(docker volume ls -q) 2>/dev/null || true
  
  # Supprimer tous les r√©seaux non utilis√©s
  echo "  - Suppression des r√©seaux non utilis√©s..."
  docker network prune -f 2>/dev/null || true
  
  # Nettoyer le syst√®me Docker (cache, etc.)
  echo "  - Nettoyage du syst√®me Docker..."
  docker system prune -af --volumes 2>/dev/null || true
  
  echo ""
  echo "‚úÖ Nettoyage complet termin√© !"
  echo "Tous les containers, images, volumes et r√©seaux non utilis√©s ont √©t√© supprim√©s."
}

# V√©rifier que Docker fonctionne
check_docker

# Demander confirmation
echo "‚ö†Ô∏è  ATTENTION: Ce script va supprimer TOUT ce qui est li√© √† Docker !"
echo "Cela inclut :"
echo "  - Tous les containers (arr√™t√©s et en cours d'ex√©cution)"
echo "  - Toutes les images"
echo "  - Tous les volumes"
echo "  - Tous les r√©seaux non utilis√©s"
echo "  - Tout le cache Docker"
echo ""
read -p "√ätes-vous s√ªr de vouloir continuer ? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
  echo "‚ùå Op√©ration annul√©e"
  exit 0
fi

# Ex√©cuter le nettoyage complet
clean_everything

echo ""
echo "üéâ Nettoyage termin√© avec succ√®s !"
