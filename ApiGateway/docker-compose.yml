version: '3.8'

services:
  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pioloop-api-gateway
    ports:
      - "5000:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
    # No file logs mounted; logs via Docker stdout
    networks:
      - pioloop-network
    depends_on:
      - auth-microservice
      - email-microservice
      - property-microservice
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  auth-microservice:
    build:
      context: ../Auth.Microservice
      dockerfile: Dockerfile
    container_name: pioloop-auth-microservice
    ports:
      - "5001:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - ConnectionStrings__DefaultConnection=Host=auth-db;Database=pioloop_auth;Username=pioloop12345;Password=piolOOP_&!?12345
      - EmailApi__BaseUrl=http://email-microservice
      # JWT Settings
      - JwtSettings__SecretKey=Pioloop2025SecretKey32CharsLong!@#
      - JwtSettings__Issuer=Pioloop
      - JwtSettings__Audience=PioloopUsers
      - JwtSettings__ExpirationHours=24
      # Email Settings
      - EmailSettings__SmtpServer=smtp.gmail.com
      - EmailSettings__SmtpPort=587
      - EmailSettings__SmtpUsername=nanyim.alain@gmail.com
      - EmailSettings__SmtpPassword=ekcc pfre ybmb iuol
      - EmailSettings__FromEmail=noreply@pioloop.com
      - EmailSettings__FromName=Pioloop

    # No file logs mounted; logs via Docker stdout
    networks:
      - pioloop-network
    depends_on:
      auth-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/auth/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  email-microservice:
    build:
      context: ../Email.Microservice
      dockerfile: Dockerfile
    container_name: pioloop-email-microservice
    ports:
      - "5002:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - EmailSettings__SmtpServer=smtp.gmail.com
      - EmailSettings__SmtpPort=587
      - EmailSettings__SmtpUsername=nanyim.alain@gmail.com
      - EmailSettings__SmtpPassword=ekcc pfre ybmb iuol
      - EmailSettings__FromEmail=noreply@pioloop.com
      - EmailSettings__FromName=Pioloop
    # No file logs mounted; logs via Docker stdout
    networks:
      - pioloop-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/email/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  property-microservice:
    build:
      context: ../Property.Microservice
      dockerfile: Dockerfile
    container_name: pioloop-property-microservice
    ports:
      - "5003:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - ConnectionStrings__DefaultConnection=Host=property-db;Database=pioloop_property;Username=pioloop12345;Password=piolOOP_&!?12345;Port=5432
      - Auth__Authority=http://auth-microservice
      - Auth__Audience=pioloop-api
    # No file logs mounted; logs via Docker stdout
    networks:
      - pioloop-network
    depends_on:
      - property-db
      - auth-microservice
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  auth-db:
    image: postgres:15-alpine
    container_name: pioloop-auth-db
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=pioloop_auth
      - POSTGRES_USER=pioloop12345
      - POSTGRES_PASSWORD=piolOOP_&!?12345
    volumes:
      - auth-db-data:/var/lib/postgresql/data
    networks:
      - pioloop-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pioloop12345 -d pioloop_auth"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  property-db:
    image: postgres:15-alpine
    container_name: pioloop-property-db
    ports:
      - "5435:5432"
    environment:
      - POSTGRES_DB=pioloop_property
      - POSTGRES_USER=pioloop12345
      - POSTGRES_PASSWORD=piolOOP_&!?12345
    volumes:
      - property-db-data:/var/lib/postgresql/data
    networks:
      - pioloop-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pioloop12345 -d pioloop_property"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

networks:
  pioloop-network:
    driver: bridge

volumes:
  auth-db-data:
  property-db-data:
